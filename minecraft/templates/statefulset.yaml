apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "minecraft.fullname" . }}
  labels:
    {{- include "minecraft.labels" . | nindent 4 }}
spec:
  replicas: 1
  serviceName: {{ include "minecraft.fullname" . }}
  selector:
    matchLabels:
      {{- include "minecraft.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "minecraft.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "minecraft.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      terminationGracePeriodSeconds: 90
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: {{ .Chart.Name }}-installer
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.images.server.repository }}:{{ .Values.images.server.tag | default "17-bullseye" }}"
          imagePullPolicy: {{ .Values.images.server.pullPolicy }}
          command:
            - /bin/bash
            - -c
            - |
              apt-get update;
              apt-get install -y jq;
              echo "Running minecraft installer";
              if [[ -f /server/server.jar ]]; then
                echo "Server already exists, continuing with server startup!";
                exit 0;
              fi
              echo "Copying config files into server directory";
              mkdir /server;
              cd server;
              cp /etc/minecraft/server.properties .;
              cp /etc/minecraft/eula.txt .;
              echo "Downloading minecraft server jar";
              curl -L $SERVER_DOWNLOAD_URL -o server.jar;
              ls -l;
          volumeMounts:
            - mountPath: /server
              name: {{ include "minecraft.fullname" . }}-server
            - mountPath: /etc/minecraft
              name: mc-config-files
        {{- if .Values.rcon.enabled -}}
        - name: {{ .Chart.Name }}-rcon-installer
          image: "{{ .Values.images.rcon.repository }}:{{ .Values.images.rcon.tag | default "bullseye" }}"
          imagePullPolicy: {{ .Values.images.rcon.pullPolicy }}
          envFrom:
            - secretRef:
                name: {{ include "minecraft.fullname" . }}-secrets
          command:
            - /bin/bash
            - -c
            - |
              echo "Running rcon-cli installer"
              if [[ -f /cmd/rcon-cli ]]; then
                echo "rcon-cli already installed, exiting."
                exit 0
              fi
              echo "Installing rcon-cli from $RCON_CLI_DOWNLOAD_URL"
              cd /cmd
              curl -L $RCON_CLI_DOWNLOAD_URL -o rcon-cli.tar.gz
              tar xfz rcon-cli.tar.gz
              rm -f rcon-cli.tar.gz
              rm -f LICENSE
              rm -f README.md
          volumeMounts:
            - mountPath: /cmd
              name: {{ include "minecraft.fullname" . }}-rcon
        {{- end -}}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.images.server.repository }}:{{ .Values.images.server.tag | default "17-bullseye" }}"
          imagePullPolicy: {{ .Values.images.server.pullPolicy }}
          workingDir: /server
          command:
            - /bin/bash
            - -c
            - |
              echo "Starting server"
              java {{ .Values.server.args }} $EXTRA_ARGS -jar server.jar nogui
          ports:
            - name: minecraft
              containerPort: 25565
              protocol: TCP
            - name: rcon
              containerPort: 25575
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 25565
            periodSeconds: 30
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: 25565
            initialDelaySeconds: 30
            periodSeconds: 30
            failureThreshold: 3
          startupProbe:
            tcpSocket:
              port: 25565
            failureThreshold: 30
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /server
              name: {{ include "minecraft.fullname" . }}-server
            - mountPath: /cmd
              name: {{ include "minecraft.fullname" . }}-rcon
          env:
            - name: RCON_HOST
              value: localhost
            - name: RCON_PORT
              value: 25575
          envFrom:
            - secretRef:
                name: {{ include "minecraft.fullname" . }}-secrets
          lifecycle:
            postStart:
              exec:
                command:
                  - /bin/bash
                  - -c
                  - |
                    /cmd/rcon-cli save-on
            preStop:
              exec:
                command:
                  - /bin/bash
                  - -c
                  - | 
                    /cmd/rcon-cli "say 'Shutting down server in 60s'";
                    sleep 60;
                    /cmd/rcon-cli save-all;
                    /cmd/rcon-cli stop
        - name: {{ .Chart.Name }}-mcrcon-sidecar
          image: "{{ .Values.images.rcon.repository }}:{{ .Values.images.rcon.tag | default "bullseye" }}"
          imagePullPolicy: {{ .Values.images.mcrcon.pullPolicy }}
          env:
            - name: RCON_HOST
              value: localhost
            - name: RCON_PORT
              value: 25575
          envFrom:
            - secretRef:
                name: {{ include "minecraft.fullname" . }}-secrets
          command:
            - /bin/bash
            - -c
            - |
              export PATH=/cmd:$PATH;
              rcon-cli
          volumeMounts:
            - mountPath: /cmd
              name: {{ include "minecraft.fullname" . }}-rcon
            - mountPath: /root/.rcon-cli.yaml
              name: rcon-config-files
              subPath: .rcon-cli.yaml
          resources:
            limits:
              cpu: 50m
              memory: 100M
            requests:
              cpu: 10m
              memory: 50M
        volumes:
          - name: rcon-config-files
            configMap:
              name: {{ include "minecraft.fullname" . }}-config-files
              items:
                - key: .rcon-cli.yaml
                  path: .rcon-cli.yaml
          - name: mc-config-files
            configMap:
              name: {{ include "minecraft.fullname" . }}-config-files
              items:
                - key: server.properties
                  path: server.properties
                - key: eula.txt
                  path: eula.txt
  volumeClaimTemplates:
    - metadata:
        name: {{ include "minecraft.fullname" . }}-server
      spec:
        accessModes:
          - ReadWriteOnce
        {{- with .Values.storageClassName }}
        storageClassName: {{ . }}
        {{- end }}
        resources:
          limits:
            storage: 10G
          requests:
            storage: 1G
    - metadata:
        name: {{ include "minecraft.fullname" . }}-rcon
      spec:
        accessModes:
          - ReadWriteOnce
        {{- with .Values.storageClassName }}
        storageClassName: {{ . }}
        {{- end }}
        resources:
          limits:
            storage: 100Mi
          requests:
            storage: 20Mi

