images:
  server:
    repository: openjdk
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "17-bullseye"
  rcon:
    repository: debian
    pullPolicy: IfNotPresent
    tag: "17-bullseye"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 25565

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 1500m
    memory: 3000M
  requests:
    cpu: 100m
    memory: 1024M

nodeSelector: {}

tolerations: []

affinity: {}

rcon:
  enabled: true
  url: "https://github.com/itzg/rcon-cli/releases/download/1.5.1/rcon-cli_1.5.1_linux_amd64.tar.gz"
  
# Storage class for the persistent volume
storageClassName: ""

# Server configuration, including download URLs for binaries and JVM configuration
server:
  # arguments for the JVM
  args: -Xmx3000M -Xms1024M -jar
  # commands with which to start the server
  command: nogui
  jar:
    # download URL for minecraft server jar
    url: "https://launcher.mojang.com/v1/objects/125e5adf40c659fd3bce3e66e67a16bb49ecc1b9/server.jar"
  config:
    # default gamemode
    gamemode: survival
    # level name
    levelName: world
    # initial level seed for world generation
    seed: "-7497863297697545553"
    # message of the day
    motd: A Minecraft Server
    # whether or not PVP should be enabled
    pvp: true
    # difficulty, either peaceful, easy, normal, or hard
    difficulty: easy
    # hardcore mode
    hardcore: false
    rendering:
      # chunk distance property, i.e., how far should chunks be served to a player
      viewDistance: 10
      simulationDistance: 10
    server:
      # server-ip
      host: 0.0.0.0
      # server port
      port: 25565
      # rate-limit, 0 is no limit at all
      rateLimit: 0
      # whether or not commands from console should be broadcast to OPs
      broadcastConsoleToOPs: true
      # prevents players behind proxys from connecting
      preventProxyConnections: false
    game:
      # max-player property
      maxPlayers: 20
      # online-mode property, will only allow authenticated players to join the server
      onlineMode: true
      # enable-command-block property
      enableCommandBlock: false
      # enabled-status
      enableStatus: true
      # allow-flight
      allowFlight: true
      # max-time-time
      maxTickTime: 60000
      # max-world-size
      maxWorldSize: 29999984
      # spawn-protection
      spawnProtection: 16
      # force-gamemode
      forceGamemode: false
      # player-idle-timeout
      playerIdleTimeout: 0
      # allow-nether
      allowNether: true
      # hide-online-players
      hideOnlinePlayers: false
      # spawn properties
      spawn:
        monsters: true
        animals: true
        npcs: true
    # rcon properties for the minecraft server
    rcon:
      # whether or not rcon is enabled. NOTE that we need this for lifecycle hooks
      enabled: true
      # default rcon ports
      port: 25575
      password: "" # if this is empty, we will generate one randomly for you!
      # whether or not to broadcast rcon events to OPs
      broadcastToOPs: true
    io:
      syncChunkWrites: true
      networkCompressionThreshold: 256
      useNativeTransport: true
    # resource pack configuration
    resourcePack:
      pack: ""
      require: true
      sha1: ""
      prompt: ""
    # query configuration for inbound traffic
    query:
      enabled: true
      port: 25565
    # permission level for executing commands
    permissionLevel:
      op: 4
      function: 2
    # whether or not whitelists should be enabled
    whitelist:
      enabled: true
    advanced:
      enableJMXMonitoring: false
      entityBroadcastRangePercentage: 100